#!/bin/sh

RPMS=src/rpms.lst
RPMNAME=$(cat rpm-name.lst)

Cat_part () {
	Part="$1"
	Arch="$2"
	echo "### include file '$Part' start"
	sed 's/@@native@@/'$NArch'/g; s/^@@'$Arch'@@ *//; /^@@/d' $Part
	echo "### include file '$Part' end"
}

Find_rpm () {
	Rpm="$1"
	List="$2"

	[ -f "$List" ] || return

	grep "$Rpm" "$List" || {
		Avail=$(grep "/$pkg-[^-]*-[^-]*$" "$List" | sed 's/.*\///; s/^'"$pkg"'-//; s/\.[^.]*.rpm$//' | uniq)
		echo >&2 "Not found: $Rpm, try $Avail"
	}
}

for Arch in i386 x86_64 ppc64 s390x ia64
do (
	NArch=`case "$Arch" in
		i?86*) echo "i386" ;;
		ppc*) echo "ppc64" ;;
		*) echo "$Arch" ;;
	esac`

	# any arch name prepended with +<something> only will have a different
	# rpm source list, but the package names will still be arch
	tmpArch=$Arch
	Arch=${Arch%%+*}
	NArch=${NArch%%+*}

	echo "# Kickstart file autogenerated by $0"
	echo
	for F in src/common-head.cfg src/packages-common.cfg src/packages-${tmpArch}.cfg src/common-interpreter.cfg src/common-pre.cfg
	do
		Cat_part $F $Arch
	done

	echo "%post"
	echo "#!/bin/bash"
	echo "# Default download location, MAY be changed to local mirror"
	echo "RPM_SITE=$RPM_SITE"
	echo
	echo "### RPM list autogenerated from $RPMS"
	echo "RPMS_NEEDED='"
	echo $RPMNAME
	sed 's/#.*//; /^$/d' < $RPMS \
	| while read pkg version biarch archs
	do

		for rpmarch in $(echo $archs)
		do
		if [ ."$rpmarch" = ."noarch" ]; then
			Rpm="$pkg-$version.noarch.rpm"
			echo "$Rpm"
			Find_rpm "$Rpm" rpm-available.lst >&3
		else
			arch_re=`
			case $Arch in
				i?86*)   echo 'i.86' ;;
				ia64)    echo 'ia64' ;;
				x86_64*) if [ ."$biarch" = ."y" ]
					 then
						echo 'x86_64|i.86'
					 else
						echo 'x86_64'
					 fi ;;
				ppc64)   echo 'ppc|ppc64' ;;
				s390x)   echo 's390x|s390' ;;
			esac
			`

			if echo "$rpmarch" | egrep -q "^($arch_re)\$"
			then
				Rpm="$pkg-$version.$rpmarch.rpm"
				echo "$Rpm"
				Find_rpm "$Rpm" rpm-available.lst >&3
			fi
		fi
		done
	done
	echo "'"

	Cat_part src/common-post.cfg $Arch
) > ks-${Arch}.cfg
done 3>&1 | sort -u >rpm-urls.lst
